{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\tripWeb-main\\\\src\\\\TripInfo.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { MapContainer, TileLayer, Marker, Tooltip, Polyline, useMap } from \"react-leaflet\";\nimport L from 'leaflet';\nimport \"leaflet/dist/leaflet.css\";\n\n// API keys and constants for interacting with Stable Horde API\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"DsLByH8LUfynbYPiJBDOfQ\";\nconst STABLE_HORDE_URL = \"https://stablehorde.net/api/v2/generate/async\";\nconst STABLE_HORDE_STATUS_URL = \"https://stablehorde.net/api/v2/generate/status/\";\n\n// Configuration constants\nconst MAX_RETRIES = 20;\nconst INITIAL_CHECK_INTERVAL = 10000; // 30 seconds\nconst MAX_CHECK_INTERVAL = 120000; // 2 minutes\n\n// Custom Leaflet icon for map markers\nconst myIcon = new L.Icon({\n  iconUrl: \"https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png\",\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\n/**\n * Component to update the map view based on the provided bounds.\n * @param {Object} bounds - The geographical bounds to fit the map view.\n * @returns {null}\n */\nfunction ChangeView({\n  bounds\n}) {\n  _s();\n  const map = useMap();\n  map.fitBounds(bounds);\n  return null;\n}\n\n/**\n * ProgressBar component to visually represent the progress of image generation.\n * @param {number} queuePosition - The position in the queue.\n * @param {number} waitTime - Estimated wait time in seconds.\n * @param {number} elapsedTime - Time elapsed since the process started in seconds.\n * @returns {JSX.Element} The progress bar UI.\n */\n_s(ChangeView, \"cX187cvZ2hODbkaiLn05gMk1sCM=\", false, function () {\n  return [useMap];\n});\n_c = ChangeView;\nfunction ProgressBar({\n  queuePosition,\n  waitTime,\n  elapsedTime\n}) {\n  _s2();\n  const [progress, setProgress] = useState(0);\n  useEffect(() => {\n    if (waitTime !== null) {\n      const totalEstimatedTime = waitTime + elapsedTime;\n      const calculatedProgress = Math.min(100, elapsedTime / totalEstimatedTime * 100);\n      setProgress(calculatedProgress);\n    }\n  }, [waitTime, elapsedTime]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      maxWidth: '400px',\n      margin: '20px auto',\n      padding: '10px',\n      backgroundColor: '#f0f0f0',\n      borderRadius: '10px',\n      boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        height: '20px',\n        backgroundColor: '#e0e0e0',\n        borderRadius: '10px',\n        overflow: 'hidden'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: `${progress}%`,\n          height: '100%',\n          backgroundColor: '#4CAF50',\n          borderRadius: '10px',\n          transition: 'width 0.5s ease-in-out',\n          position: 'relative',\n          overflow: 'hidden'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            background: 'linear-gradient(45deg, rgba(255,255,255,0.2) 25%, transparent 25%, transparent 50%, rgba(255,255,255,0.2) 50%, rgba(255,255,255,0.2) 75%, transparent 75%, transparent)',\n            backgroundSize: '40px 40px',\n            animation: 'moveStripes 1s linear infinite'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginTop: '10px',\n        fontFamily: 'Arial, sans-serif'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontWeight: 'bold',\n          color: '#333'\n        },\n        children: [progress.toFixed(1), \"% Complete\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: '#666'\n        },\n        children: [\"Est. Time: \", Math.ceil(waitTime / 60), \" min\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          @keyframes moveStripes {\n            0% {\n              background-position: 0 0;\n            }\n            100% {\n              background-position: 40px 0;\n            }\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n/**\n * Main TripInfo component responsible for rendering the trip details,\n * including the map, route information, and generated image.\n * @returns {JSX.Element} The UI for trip information.\n */\n_s2(ProgressBar, \"ZVQpwjU6Dz5R8VBOzPsnxGRmMVo=\");\n_c2 = ProgressBar;\nfunction TripInfo() {\n  _s3();\n  const location = useLocation(); // Hook to access the current route's location\n  const {\n    routes,\n    prompt\n  } = location.state || {\n    routes: [],\n    prompt: \"\"\n  }; // Extracting routes and prompt from location state\n  const [imageUrl, setImageUrl] = useState(null);\n  const [imageStatus, setImageStatus] = useState('idle');\n  const [imageGenerationId, setImageGenerationId] = useState(null);\n  const [queuePosition, setQueuePosition] = useState(null);\n  const [waitTime, setWaitTime] = useState(null);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [retryCount, setRetryCount] = useState(0);\n\n  /**\n   * Function to initiate image generation using Stable Horde API.\n   * @async\n   */\n  const generateImage = useCallback(async () => {\n    if (imageGenerationId) return;\n    try {\n      setImageStatus('generating');\n      const response = await fetch(STABLE_HORDE_URL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"apikey\": API_KEY\n        },\n        body: JSON.stringify({\n          prompt: `A scenic landscape representing a 3-day trip, showcasing the beauty and diversity of the country`,\n          params: {\n            samples: 1,\n            steps: 30\n          },\n          nsfw: false,\n          censor_nsfw: true,\n          trusted_workers: true\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log(\"Image generation started with ID:\", data.id);\n      setImageGenerationId(data.id);\n    } catch (error) {\n      console.error(\"Error generating image:\", error);\n      setImageStatus('error');\n    }\n  }, [imageGenerationId]);\n\n  /**\n   * Function to check the status of image generation using Stable Horde API.\n   * @async\n   */\n  const checkImageStatus = useCallback(async () => {\n    if (!imageGenerationId) return;\n    try {\n      const response = await fetch(`${STABLE_HORDE_STATUS_URL}${imageGenerationId}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log(\"Image status:\", data);\n      if (data.done) {\n        if (data.generations && data.generations.length > 0) {\n          setImageUrl(data.generations[0].img);\n          setImageStatus('completed');\n        } else {\n          setImageStatus('error');\n        }\n      } else {\n        setQueuePosition(data.queue_position);\n        setWaitTime(data.wait_time);\n        setImageStatus('waiting');\n        setRetryCount(prev => prev + 1);\n      }\n    } catch (error) {\n      console.error(\"Error checking image status:\", error);\n      setImageStatus('error');\n    }\n  }, [imageGenerationId]);\n\n  /**\n   * useEffect hook to start image generation when the component mounts\n   * and the imageStatus is 'idle'.\n   */\n  useEffect(() => {\n    if (imageStatus === 'idle') {\n      generateImage();\n    }\n  }, [imageStatus, generateImage]);\n\n  /**\n   * useEffect hook to periodically check the image generation status\n   * while the status is 'generating' or 'waiting'.\n   */\n  useEffect(() => {\n    let timer;\n    if (imageStatus === 'generating' || imageStatus === 'waiting') {\n      const interval = Math.min(INITIAL_CHECK_INTERVAL * Math.pow(2, retryCount), MAX_CHECK_INTERVAL);\n      timer = setTimeout(() => {\n        if (retryCount < MAX_RETRIES) {\n          checkImageStatus();\n        } else {\n          setImageStatus('error');\n        }\n      }, interval);\n    }\n    return () => clearTimeout(timer);\n  }, [imageStatus, checkImageStatus, retryCount]);\n\n  /**\n   * useEffect hook to increment the elapsed time every second.\n   */\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setElapsedTime(prevTime => prevTime + 1);\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n  if (routes.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No route information available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Calculate map bounds based on route start and end points\n  const bounds = routes.reduce((bounds, route) => {\n    bounds.extend([route.start.lat, route.start.lng]);\n    bounds.extend([route.end.lat, route.end.lng]);\n    return bounds;\n  }, new L.LatLngBounds());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trip-info-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Your 3-Day Trip\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), prompt && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'none'\n      },\n      dangerouslySetInnerHTML: {\n        __html: `<!-- Prompt: ${prompt} -->`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        bounds: bounds,\n        style: {\n          height: \"400px\",\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChangeView, {\n          bounds: bounds\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), routes.map((route, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Marker, {\n            position: [route.start.lat, route.start.lng],\n            icon: myIcon,\n            children: /*#__PURE__*/_jsxDEV(Tooltip, {\n              permanent: true,\n              children: [\"Day \", index + 1, \" Start\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Marker, {\n            position: [route.end.lat, route.end.lng],\n            icon: myIcon,\n            children: /*#__PURE__*/_jsxDEV(Tooltip, {\n              permanent: true,\n              children: [\"Day \", index + 1, \" End\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n            positions: [[route.start.lat, route.start.lng], [route.end.lat, route.end.lng]],\n            color: \"blue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trip-image\",\n      style: {\n        marginTop: '20px',\n        textAlign: 'center'\n      },\n      children: imageStatus === 'completed' && imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl,\n        alt: \"Trip Overview\",\n        style: {\n          maxWidth: '100%',\n          height: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this) : imageStatus === 'generating' || imageStatus === 'waiting' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: '#333',\n            fontFamily: 'Arial, sans-serif'\n          },\n          children: \"Generating Your Trip Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this), queuePosition !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: '#666',\n            fontFamily: 'Arial, sans-serif'\n          },\n          children: [\"Queue position: \", queuePosition]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 15\n        }, this), waitTime !== null && /*#__PURE__*/_jsxDEV(ProgressBar, {\n          queuePosition: queuePosition,\n          waitTime: waitTime,\n          elapsedTime: elapsedTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: '#666',\n            fontFamily: 'Arial, sans-serif'\n          },\n          children: [\"Time elapsed: \", Math.floor(elapsedTime / 60), \" minute(s) \", elapsedTime % 60, \" second(s)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }, this) : imageStatus === 'error' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: '#d32f2f',\n            fontFamily: 'Arial, sans-serif',\n            fontWeight: 'bold'\n          },\n          children: \"Failed to generate image. Please try again.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setImageStatus('idle');\n            setRetryCount(0);\n          },\n          style: {\n            padding: '10px 20px',\n            backgroundColor: '#4CAF50',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px',\n            cursor: 'pointer',\n            fontFamily: 'Arial, sans-serif',\n            fontWeight: 'bold',\n            transition: 'background-color 0.3s'\n          },\n          onMouseOver: e => e.target.style.backgroundColor = '#45a049',\n          onMouseOut: e => e.target.style.backgroundColor = '#4CAF50',\n          children: \"Retry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: '#333',\n          fontFamily: 'Arial, sans-serif'\n        },\n        children: \"Preparing to generate image...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), routes.map((route, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"route-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: route.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Route:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 14\n        }, this), \" \", route.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Distance:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 14\n        }, this), \" \", route.length, \" km\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Estimated Duration:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 14\n        }, this), \" \", route.duration]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Points of Interest:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: route.pointsOfInterest.map((poi, poiIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: poi\n        }, poiIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 5\n  }, this);\n}\n_s3(TripInfo, \"Si2tpuy02n+AJ8Ghe9kaOOZg5no=\", false, function () {\n  return [useLocation];\n});\n_c3 = TripInfo;\nexport default TripInfo;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ChangeView\");\n$RefreshReg$(_c2, \"ProgressBar\");\n$RefreshReg$(_c3, \"TripInfo\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useLocation","MapContainer","TileLayer","Marker","Tooltip","Polyline","useMap","L","jsxDEV","_jsxDEV","API_KEY","STABLE_HORDE_URL","STABLE_HORDE_STATUS_URL","MAX_RETRIES","INITIAL_CHECK_INTERVAL","MAX_CHECK_INTERVAL","myIcon","Icon","iconUrl","iconSize","iconAnchor","popupAnchor","shadowSize","ChangeView","bounds","_s","map","fitBounds","_c","ProgressBar","queuePosition","waitTime","elapsedTime","_s2","progress","setProgress","totalEstimatedTime","calculatedProgress","Math","min","style","width","maxWidth","margin","padding","backgroundColor","borderRadius","boxShadow","children","position","height","overflow","transition","top","left","right","bottom","background","backgroundSize","animation","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","alignItems","marginTop","fontFamily","fontWeight","color","toFixed","ceil","_c2","TripInfo","_s3","location","routes","prompt","state","imageUrl","setImageUrl","imageStatus","setImageStatus","imageGenerationId","setImageGenerationId","setQueuePosition","setWaitTime","setElapsedTime","retryCount","setRetryCount","generateImage","response","fetch","method","headers","body","JSON","stringify","params","samples","steps","nsfw","censor_nsfw","trusted_workers","ok","Error","status","data","json","console","log","id","error","checkImageStatus","done","generations","length","img","queue_position","wait_time","prev","timer","interval","pow","setTimeout","clearTimeout","setInterval","prevTime","clearInterval","reduce","route","extend","start","lat","lng","end","LatLngBounds","className","textAlign","dangerouslySetInnerHTML","__html","attribution","url","index","Fragment","icon","permanent","positions","src","alt","floor","onClick","border","cursor","onMouseOver","e","target","onMouseOut","name","description","duration","pointsOfInterest","poi","poiIndex","_c3","$RefreshReg$"],"sources":["C:/Users/user/Desktop/tripWeb-main/src/TripInfo.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { MapContainer, TileLayer, Marker, Tooltip, Polyline, useMap } from \"react-leaflet\";\nimport L from 'leaflet';\nimport \"leaflet/dist/leaflet.css\";\n\n// API keys and constants for interacting with Stable Horde API\nconst API_KEY = \"DsLByH8LUfynbYPiJBDOfQ\";\nconst STABLE_HORDE_URL = \"https://stablehorde.net/api/v2/generate/async\";\nconst STABLE_HORDE_STATUS_URL = \"https://stablehorde.net/api/v2/generate/status/\";\n\n// Configuration constants\nconst MAX_RETRIES = 20;\nconst INITIAL_CHECK_INTERVAL = 10000; // 30 seconds\nconst MAX_CHECK_INTERVAL = 120000; // 2 minutes\n\n// Custom Leaflet icon for map markers\nconst myIcon = new L.Icon({\n  iconUrl: \"https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png\",\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\n/**\n * Component to update the map view based on the provided bounds.\n * @param {Object} bounds - The geographical bounds to fit the map view.\n * @returns {null}\n */\nfunction ChangeView({ bounds }) {\n  const map = useMap();\n  map.fitBounds(bounds);\n  return null;\n}\n\n/**\n * ProgressBar component to visually represent the progress of image generation.\n * @param {number} queuePosition - The position in the queue.\n * @param {number} waitTime - Estimated wait time in seconds.\n * @param {number} elapsedTime - Time elapsed since the process started in seconds.\n * @returns {JSX.Element} The progress bar UI.\n */\nfunction ProgressBar({ queuePosition, waitTime, elapsedTime }) {\n  const [progress, setProgress] = useState(0);\n\n  useEffect(() => {\n    if (waitTime !== null) {\n      const totalEstimatedTime = waitTime + elapsedTime;\n      const calculatedProgress = Math.min(100, (elapsedTime / totalEstimatedTime) * 100);\n      setProgress(calculatedProgress);\n    }\n  }, [waitTime, elapsedTime]);\n\n  return (\n    <div style={{\n      width: '100%',\n      maxWidth: '400px',\n      margin: '20px auto',\n      padding: '10px',\n      backgroundColor: '#f0f0f0',\n      borderRadius: '10px',\n      boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n    }}>\n      <div style={{\n        position: 'relative',\n        height: '20px',\n        backgroundColor: '#e0e0e0',\n        borderRadius: '10px',\n        overflow: 'hidden',\n      }}>\n        <div\n          style={{\n            width: `${progress}%`,\n            height: '100%',\n            backgroundColor: '#4CAF50',\n            borderRadius: '10px',\n            transition: 'width 0.5s ease-in-out',\n            position: 'relative',\n            overflow: 'hidden',\n          }}\n        >\n          <div style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            background: 'linear-gradient(45deg, rgba(255,255,255,0.2) 25%, transparent 25%, transparent 50%, rgba(255,255,255,0.2) 50%, rgba(255,255,255,0.2) 75%, transparent 75%, transparent)',\n            backgroundSize: '40px 40px',\n            animation: 'moveStripes 1s linear infinite',\n          }} />\n        </div>\n      </div>\n      <div style={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginTop: '10px',\n        fontFamily: 'Arial, sans-serif',\n      }}>\n        <span style={{ fontWeight: 'bold', color: '#333' }}>\n          {progress.toFixed(1)}% Complete\n        </span>\n        <span style={{ color: '#666' }}>\n          Est. Time: {Math.ceil(waitTime / 60)} min\n        </span>\n      </div>\n      <style>\n        {`\n          @keyframes moveStripes {\n            0% {\n              background-position: 0 0;\n            }\n            100% {\n              background-position: 40px 0;\n            }\n          }\n        `}\n      </style>\n    </div>\n  );\n}\n\n/**\n * Main TripInfo component responsible for rendering the trip details,\n * including the map, route information, and generated image.\n * @returns {JSX.Element} The UI for trip information.\n */\nfunction TripInfo() {\n  const location = useLocation(); // Hook to access the current route's location\n  const { routes, prompt } = location.state || { routes: [], prompt: \"\" }; // Extracting routes and prompt from location state\n  const [imageUrl, setImageUrl] = useState(null);\n  const [imageStatus, setImageStatus] = useState('idle');\n  const [imageGenerationId, setImageGenerationId] = useState(null);\n  const [queuePosition, setQueuePosition] = useState(null);\n  const [waitTime, setWaitTime] = useState(null);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [retryCount, setRetryCount] = useState(0);\n\n  /**\n   * Function to initiate image generation using Stable Horde API.\n   * @async\n   */\n  const generateImage = useCallback(async () => {\n    if (imageGenerationId) return;\n\n    try {\n      setImageStatus('generating');\n      const response = await fetch(STABLE_HORDE_URL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"apikey\": API_KEY,\n        },\n        body: JSON.stringify({\n          prompt: `A scenic landscape representing a 3-day trip, showcasing the beauty and diversity of the country`,\n          params: {\n            samples: 1,\n            steps: 30,\n          },\n          nsfw: false,\n          censor_nsfw: true,\n          trusted_workers: true\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      console.log(\"Image generation started with ID:\", data.id);\n      setImageGenerationId(data.id);\n    } catch (error) {\n      console.error(\"Error generating image:\", error);\n      setImageStatus('error');\n    }\n  }, [imageGenerationId]);\n\n  /**\n   * Function to check the status of image generation using Stable Horde API.\n   * @async\n   */\n  const checkImageStatus = useCallback(async () => {\n    if (!imageGenerationId) return;\n\n    try {\n      const response = await fetch(`${STABLE_HORDE_STATUS_URL}${imageGenerationId}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      console.log(\"Image status:\", data);\n\n      if (data.done) {\n        if (data.generations && data.generations.length > 0) {\n          setImageUrl(data.generations[0].img);\n          setImageStatus('completed');\n        } else {\n          setImageStatus('error');\n        }\n      } else {\n        setQueuePosition(data.queue_position);\n        setWaitTime(data.wait_time);\n        setImageStatus('waiting');\n        setRetryCount(prev => prev + 1);\n      }\n    } catch (error) {\n      console.error(\"Error checking image status:\", error);\n      setImageStatus('error');\n    }\n  }, [imageGenerationId]);\n\n  /**\n   * useEffect hook to start image generation when the component mounts\n   * and the imageStatus is 'idle'.\n   */\n  useEffect(() => {\n    if (imageStatus === 'idle') {\n      generateImage();\n    }\n  }, [imageStatus, generateImage]);\n\n  /**\n   * useEffect hook to periodically check the image generation status\n   * while the status is 'generating' or 'waiting'.\n   */\n  useEffect(() => {\n    let timer;\n    if (imageStatus === 'generating' || imageStatus === 'waiting') {\n      const interval = Math.min(INITIAL_CHECK_INTERVAL * Math.pow(2, retryCount), MAX_CHECK_INTERVAL);\n      timer = setTimeout(() => {\n        if (retryCount < MAX_RETRIES) {\n          checkImageStatus();\n        } else {\n          setImageStatus('error');\n        }\n      }, interval);\n    }\n    return () => clearTimeout(timer);\n  }, [imageStatus, checkImageStatus, retryCount]);\n\n  /**\n   * useEffect hook to increment the elapsed time every second.\n   */\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setElapsedTime(prevTime => prevTime + 1);\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n\n  if (routes.length === 0) {\n    return <div>No route information available.</div>;\n  }\n\n  // Calculate map bounds based on route start and end points\n  const bounds = routes.reduce((bounds, route) => {\n    bounds.extend([route.start.lat, route.start.lng]);\n    bounds.extend([route.end.lat, route.end.lng]);\n    return bounds;\n  }, new L.LatLngBounds());\n\n  return (\n    <div className=\"trip-info-container\">\n      <h1 style={{ textAlign: \"center\" }}>Your 3-Day Trip</h1>\n      {prompt && (\n        <div style={{display: 'none'}} dangerouslySetInnerHTML={{__html: `<!-- Prompt: ${prompt} -->`}} />\n      )}\n      <div className=\"map-container\">\n        <MapContainer bounds={bounds} style={{ height: \"400px\", width: \"100%\" }}>\n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          <ChangeView bounds={bounds} />\n          {routes.map((route, index) => (\n            <React.Fragment key={index}>\n              <Marker position={[route.start.lat, route.start.lng]} icon={myIcon}>\n                <Tooltip permanent>Day {index + 1} Start</Tooltip>\n              </Marker>\n              <Marker position={[route.end.lat, route.end.lng]} icon={myIcon}>\n                <Tooltip permanent>Day {index + 1} End</Tooltip>\n              </Marker>\n              <Polyline positions={[\n                [route.start.lat, route.start.lng],\n                [route.end.lat, route.end.lng]\n              ]} color=\"blue\" />\n            </React.Fragment>\n          ))}\n        </MapContainer>\n      </div>\n      <div className=\"trip-image\" style={{ marginTop: '20px', textAlign: 'center' }}>\n        {imageStatus === 'completed' && imageUrl ? (\n          <img src={imageUrl} alt=\"Trip Overview\" style={{ maxWidth: '100%', height: 'auto' }} />\n        ) : imageStatus === 'generating' || imageStatus === 'waiting' ? (\n          <div>\n            <h3 style={{ color: '#333', fontFamily: 'Arial, sans-serif' }}>Generating Your Trip Image</h3>\n            {queuePosition !== null && (\n              <p style={{ color: '#666', fontFamily: 'Arial, sans-serif' }}>Queue position: {queuePosition}</p>\n            )}\n            {waitTime !== null && (\n              <ProgressBar queuePosition={queuePosition} waitTime={waitTime} elapsedTime={elapsedTime} />\n            )}\n            <p style={{ color: '#666', fontFamily: 'Arial, sans-serif' }}>\n              Time elapsed: {Math.floor(elapsedTime / 60)} minute(s) {elapsedTime % 60} second(s)\n            </p>\n          </div>\n        ) : imageStatus === 'error' ? (\n          <div>\n            <p style={{ color: '#d32f2f', fontFamily: 'Arial, sans-serif', fontWeight: 'bold' }}>Failed to generate image. Please try again.</p>\n            <button \n              onClick={() => { setImageStatus('idle'); setRetryCount(0); }}\n              style={{\n                padding: '10px 20px',\n                backgroundColor: '#4CAF50',\n                color: 'white',\n                border: 'none',\n                borderRadius: '5px',\n                cursor: 'pointer',\n                fontFamily: 'Arial, sans-serif',\n                fontWeight: 'bold',\n                transition: 'background-color 0.3s',\n              }}\n              onMouseOver={(e) => e.target.style.backgroundColor = '#45a049'}\n              onMouseOut={(e) => e.target.style.backgroundColor = '#4CAF50'}\n            >\n              Retry\n            </button>\n          </div>\n        ) : (\n          <div style={{ color: '#333', fontFamily: 'Arial, sans-serif' }}>Preparing to generate image...</div>\n        )}\n      </div>\n      {routes.map((route, index) => (\n        <div key={index} className=\"route-info\">\n          <h2>{route.name}</h2>\n          <p><strong>Route:</strong> {route.description}</p>\n          <p><strong>Distance:</strong> {route.length} km</p>\n          <p><strong>Estimated Duration:</strong> {route.duration}</p>\n          <h3>Points of Interest:</h3>\n          <ul>\n            {route.pointsOfInterest.map((poi, poiIndex) => (\n              <li key={poiIndex}>{poi}</li>\n            ))}\n          </ul>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default TripInfo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}