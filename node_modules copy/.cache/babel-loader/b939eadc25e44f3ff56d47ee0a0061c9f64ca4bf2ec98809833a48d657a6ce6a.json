{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\tripWeb-main\\\\src\\\\TripForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport countryList from './countries.json';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGlobe, faCar, faBicycle } from '@fortawesome/free-solid-svg-icons';\n\n/**\n * TripForm component allows users to select a country and trip type to generate a travel itinerary.\n *\n * @param {Object} props - Component props.\n * @param {Function} props.onRouteInfo - Callback function to handle the generated route information.\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TripForm({\n  onRouteInfo\n}) {\n  _s();\n  const [country, setCountry] = useState(''); // State to store the selected country\n  const [tripType, setTripType] = useState(''); // State to store the selected trip type\n  const [error, setError] = useState(''); // State to store any error messages\n  const [isLoading, setIsLoading] = useState(false); // State to track loading status\n  const navigate = useNavigate(); // React Router hook to navigate between routes\n\n  /**\n   * Handles the form submission to generate the itinerary.\n   *\n   * @param {Event} e - The form submission event.\n   */\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(''); // Reset any previous errors\n    setIsLoading(true); // Set loading state to true\n\n    try {\n      // Make a POST request to the backend API to generate the route\n      const response = await fetch('http://localhost:3001/api/getRoute', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          country,\n          tripType\n        }) // Send selected country and trip type as JSON\n      });\n      const data = await response.json();\n\n      // Check if valid routes were returned\n      if (data.routes && data.routes.length > 0) {\n        onRouteInfo(data); // Pass the route data to the parent component\n        navigate('/trip-info', {\n          state: {\n            routes: data.routes,\n            imageUrls: data.imageUrls,\n            prompt: data.prompt\n          }\n        }); // Navigate to the trip info page with route data\n      } else {\n        setError('No routes found. Please try again.'); // Set an error if no routes are found\n      }\n    } catch (error) {\n      setError('Error fetching route data. Please try again.'); // Set an error if the request fails\n      console.error('Error fetching route data:', error); // Log the error\n    } finally {\n      setIsLoading(false); // Set loading state to false after the request completes\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"trip-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"country\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faGlobe\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), \" Select Country\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"country\",\n          name: \"country\",\n          value: country,\n          onChange: e => setCountry(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Choose country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), countryList.map(countryItem => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: countryItem.country,\n            children: countryItem.country\n          }, countryItem.country, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"tripType\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: tripType === 'car' ? faCar : faBicycle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), \" Select Trip Type\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"tripType\",\n          name: \"tripType\",\n          value: tripType,\n          onChange: e => setTripType(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Choose type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"car\",\n            children: \"Car\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"bicycle\",\n            children: \"Bicycle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        children: \"Create Itinerary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(TripForm, \"vMS6BYeVMFH5FUcogmYOQBxI2lY=\", false, function () {\n  return [useNavigate];\n});\n_c = TripForm;\nexport default TripForm;\nvar _c;\n$RefreshReg$(_c, \"TripForm\");","map":{"version":3,"names":["React","useState","useNavigate","countryList","FontAwesomeIcon","faGlobe","faCar","faBicycle","jsxDEV","_jsxDEV","Fragment","_Fragment","TripForm","onRouteInfo","_s","country","setCountry","tripType","setTripType","error","setError","isLoading","setIsLoading","navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","routes","length","state","imageUrls","prompt","console","children","onSubmit","className","htmlFor","icon","fileName","_jsxFileName","lineNumber","columnNumber","id","name","value","onChange","target","required","map","countryItem","type","disabled","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/tripWeb-main/src/TripForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport countryList from './countries.json';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGlobe, faCar, faBicycle } from '@fortawesome/free-solid-svg-icons';\n\n/**\n * TripForm component allows users to select a country and trip type to generate a travel itinerary.\n *\n * @param {Object} props - Component props.\n * @param {Function} props.onRouteInfo - Callback function to handle the generated route information.\n */\nfunction TripForm({ onRouteInfo }) {\n  const [country, setCountry] = useState(''); // State to store the selected country\n  const [tripType, setTripType] = useState(''); // State to store the selected trip type\n  const [error, setError] = useState(''); // State to store any error messages\n  const [isLoading, setIsLoading] = useState(false); // State to track loading status\n  const navigate = useNavigate(); // React Router hook to navigate between routes\n\n  /**\n   * Handles the form submission to generate the itinerary.\n   *\n   * @param {Event} e - The form submission event.\n   */\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(''); // Reset any previous errors\n    setIsLoading(true); // Set loading state to true\n\n    try {\n      // Make a POST request to the backend API to generate the route\n      const response = await fetch('http://localhost:3001/api/getRoute', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ country, tripType }) // Send selected country and trip type as JSON\n      });\n      const data = await response.json();\n\n      // Check if valid routes were returned\n      if (data.routes && data.routes.length > 0) {\n        onRouteInfo(data); // Pass the route data to the parent component\n        navigate('/trip-info', { state: { routes: data.routes, imageUrls: data.imageUrls, prompt: data.prompt } }); // Navigate to the trip info page with route data\n      } else {\n        setError('No routes found. Please try again.'); // Set an error if no routes are found\n      }\n    } catch (error) {\n      setError('Error fetching route data. Please try again.'); // Set an error if the request fails\n      console.error('Error fetching route data:', error); // Log the error\n    } finally {\n      setIsLoading(false); // Set loading state to false after the request completes\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className=\"trip-form\">\n        <div className=\"form-group\">\n          <label htmlFor=\"country\">\n            <FontAwesomeIcon icon={faGlobe} /> Select Country\n          </label>\n          <select\n            id=\"country\"\n            name=\"country\"\n            value={country}\n            onChange={(e) => setCountry(e.target.value)}\n            required\n          >\n            <option value=\"\">Choose country</option>\n            {countryList.map((countryItem) => (\n              <option key={countryItem.country} value={countryItem.country}>{countryItem.country}</option>\n            ))}\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"tripType\">\n            <FontAwesomeIcon icon={tripType === 'car' ? faCar : faBicycle} /> Select Trip Type\n          </label>\n          <select\n            id=\"tripType\"\n            name=\"tripType\"\n            value={tripType}\n            onChange={(e) => setTripType(e.target.value)}\n            required\n          >\n            <option value=\"\">Choose type</option>\n            <option value=\"car\">Car</option>\n            <option value=\"bicycle\">Bicycle</option>\n          </select>\n        </div>\n        <button type=\"submit\" disabled={isLoading}>\n          Create Itinerary\n        </button>\n        {error && <p className=\"error-message\">{error}</p>} {/* Display any error messages */}\n      </form>\n      {isLoading && (\n        <div className=\"loading-overlay\">\n          <div className=\"loading-spinner\"></div> {/* Display loading spinner when loading */}\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default TripForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}